/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        mac_gui_lay1: mac_gui_lay1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_GUI>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_GUI_LAY1";
        };

        mac_cntrl_shft_lay1: mac_cntrl_shft_lay1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LS(LEFT_CONTROL)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LS(LEFT_CONTROL)>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_CNTRL_SHFT_LAY1";
        };

        mac_shift_lay1: mac_shift_lay1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_SHIFT_LAY1";
        };

        mac_gui_shift_lay1: mac_gui_shift_lay1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LS(LEFT_GUI)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LS(LEFT_GUI)>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_GUI_SHIFT_LAY1";
        };

        mac_alt_lay1: mac_alt_lay1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_ALT_LAY1";
        };

        mac_cntrl_lay1: mac_cntrl_lay1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_CNTRL_LAY1";
        };
    };

    behaviors {
        gui_and_lay1: gui_and_lay1 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_AND_LAY1";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&mac_gui_lay1>, <&kp LEFT_GUI>, <&mac_gui_shift_lay1>;
        };

        shft_mod1: shft_mod1 {
            compatible = "zmk,behavior-tap-dance";
            label = "SHFT_MOD1";
            #binding-cells = <0>;
            tapping-term-ms = <275>;
            bindings = <&kp LEFT_SHIFT>, <&mo 1>, <&mac_shift_lay1>;
        };

        cntrl_andlayer1: cntrl_andlayer1 {
            compatible = "zmk,behavior-tap-dance";
            label = "CNTRL_ANDLAYER1";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_CONTROL>,
                <&mac_cntrl_lay1>,
                <&mac_cntrl_shft_lay1>;

            tapping-term-ms = <275>;
        };

        mod_low_shft: mod_low_shft {
            compatible = "zmk,behavior-tap-dance";
            label = "MOD_LOW_SHFT";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LEFT_SHIFT>, <&mac_shift_lay1>;

            tapping-term-ms = <230>;
        };

        lay2_and_alt: lay2_and_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "LAY2_AND_ALT";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&kp LEFT_ALT>, <&mac_alt_lay1>;

            tapping-term-ms = <230>;
        };

        Layer_3_TD: Layer_3_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_3_TD";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 2>, <&tog 3>;

            tapping-term-ms = <250>;
        };

        ALT_AND_BASE: ALT_AND_BASE {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_AND_BASE";
            #binding-cells = <0>;
            bindings = <&none>, <&kp LEFT_ALT>, <&tog 0>;
            tapping-term-ms = <250>;
        };


        /*
         * Encoder defs:
         * https://zmk.dev/docs/behaviors/sensor-rotate
         * https://zmk.dev/docs/features/encoders
         */

        right_enc_vol: right_enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;
        };

        right_enc_page: right_enc_page {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp PG_DN>, <&kp PG_UP>;
        };

        right_enc_skip: right_enc_skip {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_PREV>, <&kp C_NEXT>;
        };


    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp GRAVE   &kp N1          &kp N2     &kp N3       &kp N4         &kp N5                                      &kp N6     &kp N7            &kp N8         &kp N9  &kp N0  &lay2_and_alt
&kp ENTER   &kp APOSTROPHE  &kp COMMA  &kp PERIOD   &kp P          &kp Y                                       &kp F      &kp G             &kp C          &kp R   &kp L   &kp SLASH
&kp ESCAPE  &kp A           &kp O      &kp E        &kp U          &kp I                                       &kp D      &kp H             &kp T          &kp N   &kp S   &kp MINUS
&kp TAB     &kp SEMICOLON   &kp Q      &kp J        &kp K          &kp X       &kp CAPSLOCK     &kp C_MUTE     &kp B      &kp M             &kp W          &kp V   &kp Z   &kp EQUAL
                                       &Layer_3_TD  &kp BACKSPACE  &shft_mod1  &gui_and_lay1    &mod_low_shft  &kp SPACE  &cntrl_andlayer1  &ALT_AND_BASE
            >;

            sensor-bindings = <&right_enc_vol>;
        };

        utility_layer {
            display-name = "Utility";
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans                       &trans            &trans             &trans          &trans           &trans  &trans
&trans  &trans     &trans     &trans     &trans     &trans                       &trans            &trans             &trans          &trans           &trans  &kp NON_US_BACKSLASH
&trans  &kp LC(A)  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT                    &kp DELETE        &kp HOME           &kp END         &trans           &trans  &trans
&trans  &kp LC(Y)  &kp LC(Z)  &kp LC(C)  &kp LC(V)  &kp LC(X)  &trans    &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans  &kp SLASH
                              &trans     &trans     &trans     &trans    &trans  &trans            &trans             &trans
            >;
            sensor-bindings = <&right_enc_page>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "System";
            bindings = <
&bt BT_CLR_ALL  &bt BT_NXT     &trans       &trans             &trans           &ext_power EP_TOG                    &ext_power EP_ON  &ext_power EP_TOG  &trans  &trans         &trans         &trans
&kp F1          &kp F2         &kp F3       &kp F4             &kp F5           &kp F6                               &kp F7            &kp F8             &kp F9  &kp F10        &kp F11        &kp F12
&trans          &kp PAGE_DOWN  &kp PAGE_UP  &kp C_PREVIOUS     &kp C_NEXT       &kp C_PP                             &out OUT_USB      &trans             &trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2
&trans          &trans         &trans       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE         &trans    &trans  &trans            &trans             &trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
                                            &trans             &trans           &trans             &trans    &trans  &trans            &trans             &trans
            >;
            sensor-bindings = <&right_enc_skip>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Games";
            bindings = <
&kp F8        &kp F9        &kp F2        &trans        &trans  &trans                    &trans       &trans    &trans    &trans     &trans  &trans
&mkp LCLK     &kp UP        &kp F1        &kp F5        &trans  &none                     &kp N6       &kp N7    &kp UP    &kp N9     &kp N0  &trans
&kp LEFT      &kp DOWN      &kp RIGHT     &kp F10       &trans  &none                     &trans       &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_5  &trans  &none   &trans    &trans  &kp KP_PLUS  &trans    &trans    &trans     &trans  &trans
                                          &trans        &trans  &trans  &trans    &trans  &trans       &trans    &trans
            >;
            sensor-bindings = <&right_enc_vol>;
        };
    };
};
